Процедура ОбработкаПроведения(Отказ,Режим)//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!

	// регистр ОстаткиТоваров
	Движения.ОстаткиТоваров.Записывать = Истина;
	Для Каждого ТекСтрокаТовары из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Номенклатура = ТекСтрокаТовары.Товар;
		Движение.Количество = ТекСтрокаТовары.Количество;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Выручка = ТекСтрокаТовары.Сумма;
	КонецЦикла;
	
		Движения.Записать();
		
		Если Режим = РежимПроведенияДокумента.Оперативный Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ОстаткиТоваровОстатки.Номенклатура,
			|	ОстаткиТоваровОстатки.КоличествоОстаток КАК Количество
			|ИЗ
			|	РегистрНакопления.ОстаткиТоваров.Остатки(, Номенклатура В
			|		(ВЫБРАТЬ
			|			РеализацияТоваровТовары.Товар
			|		ИЗ
			|			Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
			|		ГДЕ
			|			РеализацияТоваровТовары.Ссылка = &Ссылка)) КАК ОстаткиТоваровОстатки
			|ГДЕ
			|	ОстаткиТоваровОстатки.КоличествоОстаток < 0";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
			Если НЕ РезультатЗапроса.Пустой() Тогда
				
				Отказ = Истина;
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Сообщить("В документе " + Ссылка + " образовались отрицательные остатки!");
			
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Сообщить("По номенклатуре " + ВыборкаДетальныеЗаписи.Номенклатура + " остаток " + ВыборкаДетальныеЗаписи.Количество);
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	Если Отказ Тогда
	Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОстаткиТоваровОстатки.Номенклатура,
		|	ОстаткиТоваровОстатки.КоличествоОстаток КАК Количество,
		|	ОстаткиТоваровОстатки.СуммаОстаток КАК Сумма
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки(&МоментВремени, Номенклатура В
		|		(ВЫБРАТЬ
		|			РеализацияТоваровТовары.Товар
		|		ИЗ
		|			Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
		|		ГДЕ
		|			РеализацияТоваровТовары.Ссылка = &Ссылка)) КАК ОстаткиТоваровОстатки";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движения.Продажи.Записывать = Истина;
	
	СписаннаяСебестоимость = 0;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Для каждого Движение Из Движения.ОстаткиТоваров Цикл 
			
			Если Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура Тогда
				
				Движение.Сумма = Движение.Количество * ВыборкаДетальныеЗаписи.Сумма / ВыборкаДетальныеЗаписи.Количество;
				
				ДвижениеПродажи = Движения.Продажи.Добавить();
				
				ДвижениеПродажи.Период = Дата;
				
				ДвижениеПродажи.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				
				ДвижениеПродажи.Контрагент = Контрагент;
				
				ДвижениеПродажи.Сумма = Движение.Выручка;
				
				ДвижениеПродажи.Себестоимость = Движение.Сумма;
				
				ДвижениеПродажи.Количество = Движение.Количество;
				
				СписаннаяСебестоимость = СписаннаяСебестоимость + Движение.Сумма;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Движения.РегистрБухУчет.Записывать = Истина;
	
	Проводка = Движения.РегистрБухУчет.Добавить();
	Проводка.Период = Дата;
	Проводка.СчетДт = ПланыСчетов.БухУчет.Себестоимость;
	Проводка.СчетКт = ПланыСчетов.БухУчет.Товары;
	Проводка.Сумма = СписаннаяСебестоимость;
	
	Проводка = Движения.РегистрБухУчет.Добавить();
	Проводка.Период = Дата;
	Проводка.СчетДт = ПланыСчетов.БухУчет.РасчетыСПокупателями;
	Проводка.СчетКт = ПланыСчетов.БухУчет.Выручка;
	Проводка.Сумма = СуммаДокумента;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения,СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		// Заполнение шапки
		Ответственный = ДанныеЗаполнения.Ответственный;
		Контрагент = ДанныеЗаполнения.Контрагент;

		Для Каждого ТекСтрокаТовары из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Товар = ТекСтрокаТовары.Товар;
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Цена = ТекСтрокаТовары.Цена;
			НоваяСтрока.Сумма = ТекСтрокаТовары.Сумма;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаДокумента = 0;
	Для Каждого Строка ИЗ Товары Цикл
		СуммаДокумента = СуммаДокумента + Строка.Сумма;
	КонецЦикла;
КонецПроцедуры



Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если НЕ Контрагент.Клиент Тогда
		Отказ = Истина;
		Сообщить("В документе должен быть выбран клиент!")
	КонецЕсли;
КонецПроцедуры
